periodics:
- name: ci-k8s-infra-build-cluster-prow-build
  cron: "*/5 * * * *" #Every 5 minutes
  cluster: k8s-infra-prow-build
  decorate: true
  max_concurrency: 1
  extra_refs:
  - org: kubernetes
    repo: test-infra
    base_ref: master
  annotations:
    testgrid-dashboards: sig-k8s-infra-prow
    testgrid-tab-name: gke-prow-build-heartbeat
    testgrid-num-failures-to-alert: '6'
    testgrid-alert-email: k8s-infra-alerts@kubernetes.io, k8s-infra-prow-oncall@kubernetes.io
  spec:
    containers:
    - image: gcr.io/k8s-staging-infra-tools/k8s-infra:latest
      command:
      - "echo"
      args:
      - "Everything is fine!"
      resources:
        limits:
          cpu: 100m
          memory: 512Mi
        requests:
          cpu: 100m
          memory: 512Mi

- interval: 1h
  name: ci-kubernetes-unit-eks-canary
  annotations:
    testgrid-dashboards: sig-k8s-infra-canaries
    testgrid-tab-name: ci-kubernetes-unit-eks-canary
    testgrid-days-of-results: '1'
    testgrid-create-test-group: 'true'
  decorate: true
  cluster: eks-prow-build-cluster
  extra_refs:
    - org: kubernetes
      repo: kubernetes
      base_ref: master
      path_alias: k8s.io/kubernetes
  spec:
    # unit tests have no business requiring root or doing privileged operations
    securityContext:
      # NOTE: these are arbitrary non-root values. They don't exist in the
      # image and don't need to, the unit tests should only write to TMPDIR
      runAsUser: 2001
      runAsGroup: 2010
    containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20231206-f7b83ffbe6-master
        securityContext:
          allowPrivilegeEscalation: false
        command:
          - make
          - test
        # TODO: direct copy from pull-kubernetes-bazel-test, tune these
        resources:
          limits:
            cpu: 4
            memory: "36Gi"
          requests:
            cpu: 4
            memory: "36Gi"

- name: ci-benchmark-scheduler-perf-master-eks-canary
  cluster: eks-prow-build-cluster
  tags:
  - "perfDashPrefix: scheduler-perf-benchmark"
  - "perfDashJobType: benchmark"
  interval: 2h30m
  annotations:
    testgrid-dashboards: sig-k8s-infra-canaries
    testgrid-tab-name: scheduler-perf-eks-canary
  decorate: true
  extra_refs:
  - org: kubernetes
    repo: kubernetes
    base_ref: master
    path_alias: k8s.io/kubernetes
  decoration_config:
    timeout: 2h25m
  spec:
    containers:
    - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20231206-f7b83ffbe6-master
      command:
      - ./hack/jenkins/benchmark-dockerized.sh
      args:
      - ./test/integration/scheduler_perf
      env:
      - name: KUBE_TIMEOUT
        value: --timeout=2h25m
      - name: TEST_PREFIX
        value: BenchmarkPerfScheduling
      # Set the benchtime to a very low value so every test is ran at most once
      # even on very powerful machines
      - name: BENCHTIME
        value: 1ns
      # We need to constraint compute resources so all the tests
      # finish approximately at the same time. More compute power
      # can increase scheduling throughput and make consequent results
      # incomparable.
      resources:
        requests:
          cpu: 6
          memory: "24Gi"
        limits:
          cpu: 6
          memory: "24Gi"

- interval: 1h
  cluster: eks-prow-build-cluster
  # This combines tests from ci-kubernetes-kind-conformance and sig-storage
  # and runs them with JSON output in all components which support that.
  # Also enables contextual logging and (to get more coverage) dynamic
  # resource allocation.
  name: ci-kubernetes-kind-e2e-json-logging-eks-canary
  annotations:
    testgrid-dashboards: sig-k8s-infra-canaries
    testgrid-tab-name: kind-json-logging-master-eks-canary
    description: Conformance and storage tests with JSON logging enabled using sigs.k8s.io/kind
    testgrid-num-columns-recent: '6'
  labels:
    preset-dind-enabled: "true"
    preset-kind-volume-mounts: "true"
  decorate: true
  decoration_config:
    timeout: 150m
  extra_refs:
  - org: kubernetes
    repo: kubernetes
    base_ref: master
    path_alias: k8s.io/kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-staging-test-infra/krte:v20231206-f7b83ffbe6-master
      command:
      - wrapper.sh
      - bash
      - -c
      # The modified e2e-k8s.sh with support for FEATURE_GATES and RUNTIME_CONFIG comes from
      # https://github.com/kubernetes-sigs/kind/pull/3023. Once that PR is merged and a
      # kind release is done, pulling it separately via curl can be removed.
      - >
        curl -sSL https://kind.sigs.k8s.io/dl/latest/linux-amd64.tgz | tar xvfz - -C "${PATH%%:*}/" &&
        curl -sSL https://github.com/pohly/kind/raw/e2e-feature-gates/hack/ci/e2e-k8s.sh >$(which e2e-k8s.sh) &&
        chmod u+x $(which e2e-k8s.sh) &&
        e2e-k8s.sh

      env:
      # Options from https://github.com/kubernetes-sigs/kind/blob/d1eecc46e30cac9d35cd32dc52677ef75ec22e18/hack/ci/e2e-k8s.sh#L79-L83
      - name: CLUSTER_LOG_FORMAT
        value: json
      - name: KIND_CLUSTER_LOG_LEVEL
        # Default is 4, but we want to exercise more log calls and get more output.
        value: "10"
      - name: FEATURE_GATES
        value: '{"DynamicResourceAllocation":true,"ContextualLogging":true}'
      - name: RUNTIME_CONFIG
        value: '{"resource.k8s.io/v1alpha2":"true"}'
      # don't retry conformance tests
      - name: GINKGO_TOLERATE_FLAKES
        value: "n"
      - name: FOCUS
        value: \[Conformance\]|\[Driver:.csi-hostpath\]|DynamicResourceAllocation
      # TODO(bentheelder): reduce the skip list further
      # NOTE: this skip list is from the standard periodic kind job, just to ensure
      # we don't accidentally select any of these
      - name: SKIP
        value: \[Slow\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|PodSecurityPolicy|LoadBalancer|load.balancer|In-tree.Volumes.\[Driver:.nfs\]|PersistentVolumes.NFS|Network.should.set.TCP.CLOSE_WAIT.timeout|Simple.pod.should.support.exec.through.an.HTTP.proxy|subPath.should.support.existing|should.provide.basic.identity
      - name: PARALLEL
        value: "true"
      # we need privileged mode in order to do docker in docker
      securityContext:
        privileged: true
      resources:
        limits:
          memory: 9Gi
          cpu: 7
        requests:
          # these are both a bit below peak usage during build
          # this is mostly for building kubernetes
          memory: 9Gi
          cpu: 7

- name: ci-aws-kops-eks-sandbox
  interval: 5m
  cluster: k8s-infra-kops-prow-build
  max_concurrency: 1
  decorate: true
  spec:
    containers:
      - command:
        - curl
        - -v
        - -L
        - https://dl.k8s.io/release/stable.txt
        image: cgr.dev/chainguard/curl:latest
        resources:
          limits:
            cpu: 2
            memory: 2Gi
          requests:
            cpu: 2
            memory: 2Gi
  annotations:
    testgrid-dashboards: sig-k8s-infra-canaries
    testgrid-tab-name: ci-aws-kops-eks-sandbox
    description: Uses to test scheduling on an EKS cluster and Boskos features development


- name: ci-aws-kops-eks-pod-identity-sandbox
  interval: 1h
  cluster: k8s-infra-kops-prow-build
  labels:
    preset-aws-ssh: "true"
  max_concurrency: 1
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: prowjob-default-sa
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-12-amd64-20231013-1532' --channel=alpha --networking=cilium --discovery-store=s3://k8s-kops-ci-prow-sandbox/discovery" \
          --cluster-name=e2e-kops-eks-sandbox-cilium-deb12.tests-kops-aws.k8s.io \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable.txt \
          --test=kops \
          -- \
          --test-args="-test.timeout=60m" \
          --test-package-marker=stable.txt \
          --parallel=25
      env:
      - name: DISCOVERY_STORE
        value: "s3://k8s-kops-ci-prow-sandbox"
      - name: KOPS_STATE_STORE
        value: "s3://k8s-kops-ci-prow-sandbox-state-store"
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20231206-f7b83ffbe6-master
      imagePullPolicy: Always
      resources:
        limits:
          cpu: "4"
          memory: 6Gi
        requests:
          cpu: "4"
          memory: 6Gi
  annotations:
    testgrid-dashboards: sig-k8s-infra-canaries
    testgrid-tab-name: ci-aws-kops-eks-pod-identity-sandbox
    description: Uses to test EKS Pod Identity
