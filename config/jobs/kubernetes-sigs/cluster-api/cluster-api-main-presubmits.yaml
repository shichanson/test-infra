# Code generated by cluster-api's prowjob-gen. DO NOT EDIT.
presubmits:
  kubernetes-sigs/cluster-api:
  - name: pull-cluster-api-build-main
    cluster: eks-prow-build-cluster
    decorate: true
    path_alias: sigs.k8s.io/cluster-api
    always_run: true
    branches:
    # The script this job runs is not in all branches.
    - ^main$
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20240405-68dde9badf-1.30
        command:
        - runner.sh
        - ./scripts/ci-build.sh
        resources:
          requests:
            cpu: 6000m
            memory: 4Gi
          limits:
            cpu: 6000m
            memory: 4Gi
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api
      testgrid-tab-name: capi-pr-build-main
  - name: pull-cluster-api-apidiff-main
    cluster: eks-prow-build-cluster
    decorate: true
    path_alias: sigs.k8s.io/cluster-api
    optional: true
    branches:
    # The script this job runs is not in all branches.
    - ^main$
    run_if_changed: '^((api|bootstrap|cmd|config|controllers|controlplane|errors|exp|feature|hack|internal|scripts|test|util|webhooks|version)/|main\.go|go\.mod|go\.sum|Dockerfile|Makefile)'
    spec:
      containers:
      - command:
        - runner.sh
        - ./scripts/ci-apidiff.sh
        image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20240405-68dde9badf-1.30
        resources:
          requests:
            cpu: 6000m
            memory: 2Gi
          limits:
            cpu: 6000m
            memory: 2Gi
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api
      testgrid-tab-name: capi-pr-apidiff-main
  - name: pull-cluster-api-verify-main
    cluster: eks-prow-build-cluster
    decorate: true
    path_alias: sigs.k8s.io/cluster-api
    always_run: true
    labels:
      preset-dind-enabled: "true"
    branches:
    # The script this job runs is not in all branches.
    - ^main$
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20240405-68dde9badf-1.30
        command:
        - "runner.sh"
        - ./scripts/ci-verify.sh
        resources:
          requests:
            cpu: 5000m
            memory: 3Gi
          limits:
            cpu: 5000m
            memory: 3Gi
        securityContext:
          privileged: true
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api
      testgrid-tab-name: capi-pr-verify-main
  - name: pull-cluster-api-test-main
    cluster: eks-prow-build-cluster
    decorate: true
    path_alias: sigs.k8s.io/cluster-api
    branches:
    # The script this job runs is not in all branches.
    - ^main$
    run_if_changed: '^((api|bootstrap|cmd|config|controllers|controlplane|errors|exp|feature|hack|internal|scripts|test|util|webhooks|version)/|main\.go|go\.mod|go\.sum|Dockerfile|Makefile)'
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20240405-68dde9badf-1.30
        args:
        - runner.sh
        - ./scripts/ci-test.sh
        resources:
          requests:
            cpu: 7300m
            memory: 9Gi
          limits:
            cpu: 7300m
            memory: 9Gi
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api
      testgrid-tab-name: capi-pr-test-main
  - name: pull-cluster-api-test-mink8s-main
    cluster: eks-prow-build-cluster
    decorate: true
    path_alias: sigs.k8s.io/cluster-api
    always_run: false
    branches:
    # The script this job runs is not in all branches.
    - ^main$
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20240405-68dde9badf-1.30
        args:
        - runner.sh
        - ./scripts/ci-test.sh
        env:
        # This value determines the minimum Kubernetes
        # supported version for Cluster API management cluster
        # and can be found by referring to [Supported Kubernetes Version](https://cluster-api.sigs.k8s.io/reference/versions.html#supported-kubernetes-versions)
        # docs (look for minimum supported k8s version for management cluster, i.e N-3).
        #
        # To check the latest available envtest in Kubebuilder for the minor version we determined above, please
        # refer to https://github.com/kubernetes-sigs/kubebuilder/tree/tools-releases.
        - name: KUBEBUILDER_ENVTEST_KUBERNETES_VERSION
          value: "1.26.1"
        resources:
          requests:
            cpu: 7300m
            memory: 9Gi
          limits:
            cpu: 7300m
            memory: 9Gi
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api
      testgrid-tab-name: capi-pr-test-mink8s-main
  - name: pull-cluster-api-e2e-mink8s-main
    cluster: eks-prow-build-cluster
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
    extra_refs:
    - org: kubernetes
      repo: kubernetes
      base_ref: master
      path_alias: k8s.io/kubernetes
    decorate: true
    path_alias: sigs.k8s.io/cluster-api
    always_run: false
    branches:
    # The script this job runs is not in all branches.
    - ^main$
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20240405-68dde9badf-1.30
        args:
        - runner.sh
        - ./scripts/ci-e2e.sh
        env:
        - name: GINKGO_SKIP
          value: "\\[Conformance\\]|\\[IPv6\\]"
        # This value determines the minimum Kubernetes
        # supported version for Cluster API management cluster
        # and can be found by referring to [Supported Kubernetes Version](https://cluster-api.sigs.k8s.io/reference/versions.html#supported-kubernetes-versions)
        # docs (look for minimum supported k8s version for management cluster, i.e N-3).
        # Please also make sure to refer a version where a kindest/node image exists
        # for (see https://github.com/kubernetes-sigs/kind/releases/)
        - name: KUBERNETES_VERSION_MANAGEMENT
          value: "v1.26.6@sha256:6e2d8b28a5b601defe327b98bd1c2d1930b49e5d8c512e1895099e4504007adb"
        # we need privileged mode in order to do docker in docker
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 7300m
            memory: 32Gi
          limits:
            cpu: 7300m
            memory: 32Gi
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api
      testgrid-tab-name: capi-pr-e2e-mink8s-main
  - name: pull-cluster-api-e2e-blocking-main
    cluster: eks-prow-build-cluster
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
    extra_refs:
    - org: kubernetes
      repo: kubernetes
      base_ref: master
      path_alias: k8s.io/kubernetes
    decorate: true
    branches:
    # The script this job runs is not in all branches.
    - ^main$
    path_alias: sigs.k8s.io/cluster-api
    run_if_changed: '^((api|bootstrap|cmd|config|controllers|controlplane|errors|exp|feature|hack|internal|scripts|test|util|webhooks|version)/|main\.go|go\.mod|go\.sum|Dockerfile|Makefile)'
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20240405-68dde9badf-1.30
        args:
          - runner.sh
          - "./scripts/ci-e2e.sh"
        env:
          - name: GINKGO_FOCUS
            value: "\\[PR-Blocking\\]"
        # we need privileged mode in order to do docker in docker
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 7300m
            memory: 32Gi
          limits:
            cpu: 7300m
            memory: 32Gi
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api
      testgrid-tab-name: capi-pr-e2e-blocking-main
  - name: pull-cluster-api-e2e-dualstack-and-ipv6-main
    cluster: eks-prow-build-cluster
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
    extra_refs:
    - org: kubernetes
      repo: kubernetes
      base_ref: master
      path_alias: k8s.io/kubernetes
    decorate: true
    always_run: false
    branches:
      # The script this job runs is not in all branches.
      - ^main$
    path_alias: sigs.k8s.io/cluster-api
    spec:
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20240405-68dde9badf-1.30
          args:
            - runner.sh
            - "./scripts/ci-e2e.sh"
          env:
            # enable IPV6 in bootstrap image
            - name: "DOCKER_IN_DOCKER_IPV6_ENABLED"
              value: "true"
            - name: GINKGO_SKIP
              value: "\\[Conformance\\]"
          # we need privileged mode in order to do docker in docker
          securityContext:
            privileged: true
          resources:
            requests:
              cpu: 7300m
              memory: 32Gi
            limits:
              cpu: 7300m
              memory: 32Gi
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api
      testgrid-tab-name: capi-pr-e2e-dualstack-and-ipv6-main

  - name: pull-cluster-api-e2e-main
    cluster: eks-prow-build-cluster
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
    extra_refs:
    - org: kubernetes
      repo: kubernetes
      base_ref: master
      path_alias: k8s.io/kubernetes
    decorate: true
    always_run: false
    branches:
    # The script this job runs is not in all branches.
    - ^main$
    path_alias: sigs.k8s.io/cluster-api
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20240405-68dde9badf-1.30
        args:
          - runner.sh
          - "./scripts/ci-e2e.sh"
        env:
          - name: GINKGO_SKIP
            value: "\\[Conformance\\]|\\[IPv6\\]"
        # we need privileged mode in order to do docker in docker
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 7300m
            memory: 32Gi
          limits:
            cpu: 7300m
            memory: 32Gi
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api
      testgrid-tab-name: capi-pr-e2e-main
  - name: pull-cluster-api-e2e-upgrade-1-29-1-30-main
    cluster: eks-prow-build-cluster
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
    decorate: true
    always_run: false
    branches:
    # The script this job runs is not in all branches.
    - ^main$
    path_alias: sigs.k8s.io/cluster-api
    extra_refs:
    - org: kubernetes
      repo: kubernetes
      base_ref: master
      path_alias: k8s.io/kubernetes
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20240405-68dde9badf-1.30
        args:
          - runner.sh
          - "./scripts/ci-e2e.sh"
        env:
          - name: ALWAYS_BUILD_KIND_IMAGES
            value: "true"
          - name: KUBERNETES_VERSION_UPGRADE_FROM
            value: "stable-1.29"
          - name: KUBERNETES_VERSION_UPGRADE_TO
            value: "ci/latest-1.30"
          - name: ETCD_VERSION_UPGRADE_TO
            value: "3.5.10-0"
          - name: COREDNS_VERSION_UPGRADE_TO
            value: "v1.11.1"
          - name: GINKGO_FOCUS
            value: "\\[Conformance\\] \\[K8s-Upgrade\\]"
        # we need privileged mode in order to do docker in docker
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 7300m
            memory: 32Gi
          limits:
            cpu: 7300m
            memory: 32Gi
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api
      testgrid-tab-name: capi-pr-e2e-main-1-29-1-30

  - name: pull-cluster-api-e2e-conformance-main
    cluster: eks-prow-build-cluster
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
    extra_refs:
    - org: kubernetes
      repo: kubernetes
      base_ref: master
      path_alias: k8s.io/kubernetes
    decorate: true
    always_run: false
    branches:
    # The script this job runs is not in all branches.
    - ^main$
    path_alias: sigs.k8s.io/cluster-api
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20240405-68dde9badf-1.30
        args:
        - runner.sh
        - "./scripts/ci-e2e.sh"
        env:
        - name: GINKGO_FOCUS
          value: "\\[Conformance\\] \\[K8s-Install\\]"
        # we need privileged mode in order to do docker in docker
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 7300m
            memory: 32Gi
          limits:
            cpu: 7300m
            memory: 32Gi
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api
      testgrid-tab-name: capi-pr-e2e-conformance-main
  - name: pull-cluster-api-e2e-conformance-ci-latest-main
    cluster: eks-prow-build-cluster
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
    extra_refs:
    - org: kubernetes
      repo: kubernetes
      base_ref: master
      path_alias: k8s.io/kubernetes
    decorate: true
    always_run: false
    branches:
    # The script this job runs is not in all branches.
    - ^main$
    path_alias: sigs.k8s.io/cluster-api
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20240405-68dde9badf-1.30
        args:
        - runner.sh
        - "./scripts/ci-e2e.sh"
        env:
        - name: GINKGO_FOCUS
          value: "\\[Conformance\\] \\[K8s-Install-ci-latest\\]"
        # we need privileged mode in order to do docker in docker
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 7300m
            memory: 32Gi
          limits:
            cpu: 7300m
            memory: 32Gi
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api
      testgrid-tab-name: capi-pr-e2e-conformance-ci-latest-main
