presets:
- labels:
    preset-cluster-api-provider-vsphere-e2e-config: "true"
  env:
  - name: GOVC_URL
    valueFrom:
      secretKeyRef:
        name: capv-ci-overrides
        key: vsphere-server
  - name: GOVC_USERNAME
    valueFrom:
      secretKeyRef:
        name: capv-ci-overrides
        key: vsphere-username
  - name: GOVC_PASSWORD
    valueFrom:
      secretKeyRef:
        name: capv-ci-overrides
        key: vsphere-password
  - name: VSPHERE_TLS_THUMBPRINT
    valueFrom:
      secretKeyRef:
        name: capv-ci-overrides
        key: vsphere-server-thumbprint
  - name: VM_SSH_PUB_KEY
    valueFrom:
      secretKeyRef:
        name: clusterapi-provider-vsphere-ci-prow
        key: vm-ssh-pub-key
  volumeMounts:
  - name: private-key
    mountPath: /root/ssh/.private-key
  - name: vpn-conf
    mountPath: /root/.openvpn
  - name: ipam-conf
    mountPath: /root/ipam-conf
  volumes:
  - name: private-key
    secret:
      secretName: clusterapi-provider-vsphere-ci-prow
      defaultMode: 256
      items:
      - key: vm-ssh-key
        path: private-key
  - name: vpn-conf
    secret:
      secretName: cluster-api-provider-vsphere-vpn-config
      defaultMode: 256
      items:
      - key: prow.ovpn
        path: prow.ovpn
      - key: client.crt
        path: client.crt
      - key: client.key
        path: client.key
      - key: ca.crt
        path: ca.crt
      - key: tls.key
        path: tls.key
  - name: ipam-conf
    secret:
      secretName: capv-ipam-kubeconfig
      defaultMode: 256
      items:
      - key: capv-services.conf
        path: capv-services.conf
- labels:
    preset-cluster-api-provider-vsphere-gcs-creds: "true"
  env:
  - name: GCR_KEY_FILE
    value: /root/.capv/keyfile.json
  volumes:
  - name: cluster-api-provider-vsphere-gcs-creds
    secret:
      secretName: cluster-api-provider-vsphere-gcs-prow
      items:
      - key: keyfile.json
        path: keyfile.json
        mode: 288
  volumeMounts:
  - name: cluster-api-provider-vsphere-gcs-creds
    mountPath: /root/.capv
    readOnly: true

presubmits:
  kubernetes-sigs/cluster-api-provider-vsphere:
  - name: pull-cluster-api-provider-vsphere-apidiff-main
    cluster: eks-prow-build-cluster
    branches:
    - ^main$
    always_run: false
    # Run if go files, scripts or configuration changed (we use the same for all jobs for simplicity).
    run_if_changed: '^((apis|config|controllers|feature|hack|packaging|pkg|test|webhooks)/|Dockerfile|go\.mod|go\.sum|main\.go|Makefile)'
    optional: true
    decorate: true
    path_alias: sigs.k8s.io/cluster-api-provider-vsphere
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230727-ea685f8747-1.27
        command:
        - runner.sh
        args:
        - ./hack/ci-apidiff.sh
        resources:
          limits:
            cpu: 2
            memory: 4Gi
          requests:
            cpu: 2
            memory: 4Gi
    annotations:
      testgrid-dashboards: vmware-cluster-api-provider-vsphere, sig-cluster-lifecycle-cluster-api-provider-vsphere
      testgrid-tab-name: pr-apidiff-main
      description: Checks for API changes in the PR

  - name: pull-cluster-api-provider-vsphere-verify-main
    cluster: eks-prow-build-cluster
    branches:
    - ^main$
    labels:
      preset-dind-enabled: "true"
    always_run: true
    decorate: true
    path_alias: sigs.k8s.io/cluster-api-provider-vsphere
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230727-ea685f8747-1.27
        command:
        - runner.sh
        args:
        - make
        - verify
        # we need privileged mode in order to do docker in docker
        securityContext:
          privileged: true
        resources:
          limits:
            cpu: 2
            memory: 4Gi
          requests:
            cpu: 2
            memory: 4Gi
    annotations:
      testgrid-dashboards: vmware-cluster-api-provider-vsphere, sig-cluster-lifecycle-cluster-api-provider-vsphere
      testgrid-tab-name: pr-verify-main

  - name: pull-cluster-api-provider-vsphere-test-main
    cluster: eks-prow-build-cluster
    branches:
    - ^main$
    always_run: false
    # Run if go files, scripts or configuration changed (we use the same for all jobs for simplicity).
    run_if_changed: '^((apis|config|controllers|feature|hack|packaging|pkg|test|webhooks)/|Dockerfile|go\.mod|go\.sum|main\.go|Makefile)'
    decorate: true
    path_alias: sigs.k8s.io/cluster-api-provider-vsphere
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230727-ea685f8747-1.27
        resources:
          limits:
            cpu: 2
            memory: 4Gi
          requests:
            cpu: 2
            memory: 4Gi
        command:
        - runner.sh
        args:
        - make
        - test-junit
    annotations:
      testgrid-dashboards: vmware-cluster-api-provider-vsphere, sig-cluster-lifecycle-cluster-api-provider-vsphere
      testgrid-tab-name: pr-test-main
      description: Runs unit tests

  - name: pull-cluster-api-provider-vsphere-test-integration-main
    cluster: k8s-infra-prow-build
    branches:
    - ^main$
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
    always_run: false
    # Run if go files, scripts or configuration changed (we use the same for all jobs for simplicity).
    run_if_changed: '^((apis|config|controllers|feature|hack|packaging|pkg|test|webhooks)/|Dockerfile|go\.mod|go\.sum|main\.go|Makefile)'
    decorate: true
    path_alias: sigs.k8s.io/cluster-api-provider-vsphere
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230727-ea685f8747-1.27
        # we need privileged mode in order to do docker in docker
        securityContext:
          privileged: true
          capabilities:
            add: ["NET_ADMIN"]
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi
        command:
        - runner.sh
        args:
        - make
        - test-integration
    annotations:
      testgrid-dashboards: vmware-cluster-api-provider-vsphere, sig-cluster-lifecycle-cluster-api-provider-vsphere
      testgrid-tab-name: pr-test-integration-main
      description: Runs integration tests

  - name: pull-cluster-api-provider-vsphere-e2e-main
    branches:
    - ^main$
    labels:
      preset-dind-enabled: "true"
      preset-cluster-api-provider-vsphere-e2e-config: "true"
      preset-cluster-api-provider-vsphere-gcs-creds: "true"
      preset-kind-volume-mounts: "true"
    always_run: false
    # Run if go files, scripts or configuration changed (we use the same for all jobs for simplicity).
    run_if_changed: '^((apis|config|controllers|feature|hack|packaging|pkg|test|webhooks)/|Dockerfile|go\.mod|go\.sum|main\.go|Makefile)'
    decorate: true
    path_alias: sigs.k8s.io/cluster-api-provider-vsphere
    max_concurrency: 3
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230727-ea685f8747-1.27
        command:
        - runner.sh
        args:
        - ./hack/e2e.sh
        env:
        - name: GINKGO_FOCUS
          value: "\\[PR-Blocking\\]"
        # we need privileged mode in order to do docker in docker
        securityContext:
          privileged: true
          capabilities:
            add: ["NET_ADMIN"]
        resources:
          requests:
            cpu: "4000m"
            memory: "6Gi"
    annotations:
      testgrid-dashboards: vmware-cluster-api-provider-vsphere, sig-cluster-lifecycle-cluster-api-provider-vsphere
      testgrid-tab-name: pr-e2e-main
      description: Runs only PR Blocking e2e tests

  - name: pull-cluster-api-provider-vsphere-e2e-full-main
    branches:
    - ^main$
    labels:
      preset-dind-enabled: "true"
      preset-cluster-api-provider-vsphere-e2e-config: "true"
      preset-cluster-api-provider-vsphere-gcs-creds: "true"
      preset-kind-volume-mounts: "true"
    always_run: false
    decorate: true
    path_alias: sigs.k8s.io/cluster-api-provider-vsphere
    max_concurrency: 3
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230727-ea685f8747-1.27
        command:
        - runner.sh
        args:
        - ./hack/e2e.sh
        env:
        - name: GINKGO_SKIP
          value: "\\[Conformance\\] \\[specialized-infra\\]"
        # we need privileged mode in order to do docker in docker
        securityContext:
          privileged: true
          capabilities:
            add: ["NET_ADMIN"]
        resources:
          requests:
            cpu: "4000m"
            memory: "6Gi"
    annotations:
      testgrid-dashboards: vmware-cluster-api-provider-vsphere, sig-cluster-lifecycle-cluster-api-provider-vsphere
      testgrid-tab-name: pr-e2e-full-main
      description: Runs all e2e tests

  - name: pull-cluster-api-provider-vsphere-conformance-main
    branches:
    - ^main$
    labels:
      preset-dind-enabled: "true"
      preset-cluster-api-provider-vsphere-e2e-config: "true"
      preset-cluster-api-provider-vsphere-gcs-creds: "true"
      preset-kind-volume-mounts: "true"
    always_run: false
    decorate: true
    path_alias: sigs.k8s.io/cluster-api-provider-vsphere
    max_concurrency: 3
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20230727-ea685f8747-1.27
        command:
        - runner.sh
        args:
        - ./hack/e2e.sh
        env:
        - name: GINKGO_FOCUS
          value: "\\[Conformance\\]"
        # we need privileged mode in order to do docker in docker
        securityContext:
          privileged: true
          capabilities:
            add: ["NET_ADMIN"]
        resources:
          requests:
            cpu: "4000m"
            memory: "6Gi"
    annotations:
      testgrid-dashboards: vmware-cluster-api-provider-vsphere, sig-cluster-lifecycle-cluster-api-provider-vsphere
      testgrid-tab-name: pr-conformance-main
      description: Runs conformance tests for CAPV
